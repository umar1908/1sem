1)Из каких сегментов состоит структура памяти процесса?
-Стек(хранение локальных переменных, адресов возврата, аргументов функций...)
-Куча(зарезервированное пространство для динамического выделения памяти)
-BSS(хранение неинициализированных переменных)
-Data(глобальные переменные)
-Text (код программы)
2)Каким образом связаны встроенные указатели и массивы?
int a[5] - целочисленный массив размером 5 элементов
a- указатель на первый элемент массива
(a+i)-адресс i-ого элемента массива
*(a+i)=a[i]
3)Почему низкоуровневая работа с памятью небезопасна?
-Можно залезть "чужую память" -> непредсказуемые, трудноуловимые ошибки
-Утечка памяти (Необходимо пристально следить за освобождением ненужной памяти)
4)Что такое ссылка и чем она отличается от указателя
ссылка-тип переменной которая работает как псевдоним объекта с которым она связана.
Отличается от указателей тем, что для доступа к связанному с ней объекту ее не нужно разыменовывать.
5)Какими способами можно передать данные в функцию?
по значению, по указателю и по ссылке
При передече по значению передается копия элемента, а не сам элемент. Соответственно его  изменения
внутри функции не повлияют на исходную переменную
