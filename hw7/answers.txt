1)Композиция (когда один класс имеет внутри себя другой),Ассоциация
(Два независимых, но взаимодействующих друг с другом классов в обе стороны),
Агрегация (тип отношений между целым и частным когда целое владеет частным, но
не единоличным образом, и частное может существовать и без целого и продолжает
существовать даже если целого уже нет)
Зависимость(один объект обращается к функционалу другого поекта, причем зависимость
сторого однонаправленная )
Обобщение (реализовывается с помощью наследования. От общего к частному. Позволяет писать
алгоритмы, работающие с разными типами данных)
2) 3 типа public,private,protected. Типы наследования нужны для того чтобы
менять тип доступа к членам дочернего класса унаследованных у родительского для
сторонних сущностей. Puplic оставляет те же отношения, что прописаны в родительском классе.
Private: все методы/члены родительского класса становятся закрытыми.
Protected: public и protected становятся protected, а private остается недоступным
3)v-table. Таблица которую содержит каждый класс в котором есть виртуальная функция.
Она содержит адреса виртуальных функций, в реализации наиболее близкой к данному классу
4)Виртуальные базовые классы позволяют решить проблему множественного наследования, когда
классы от которых наследуют сами являются наследниками одного базового класса. (Проблема
в том, то у дочернего класса будет сразу две части базового класса и это создаст неопределенность)
При использовании виртуального базового класса будет происходить слежка за тем, чтобы
не было дубликатов
5)Принцип подстановки Лисков помогает определить, когда следует производить
наследование, а когда нет.
x - объект класса Х
p(x)=1 -утверждение справедливое для любого х
y - экземпляр класса Y наследника класса Х
p(y)=1 (в таком случае наследование действительно оправдано)
