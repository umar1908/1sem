#include <iostream>
#include <iomanip>
using namespace std;
#include "B.h"
#include "C.h" // тут может возникнуть проблема, если в B.h нет защиты #ifendif #define #ifendif
//т.к подключение класса С вызовет подключение класса B (класс B входит в поля С)
// поэтому если в B.h нет защиты, то он подключится 2 раза, что вызовет ошибку линковки
 #include <cstdlib>



int main(){
  system("chcp 1251"); //для корректного отображения кирилицы
  cout<<endl;
  B b{3};
  b.print();
  return 0;
}

//если раскомментировать этот код, то возникнет ошибка линковщика с обнаружением
//многократно определенного внешнего символа
// Решение: определять методы подключаемого класса только в исходном файле класса
/*void B::print()const{
  cout<<x;
}

B::B(int _x):x(_x){}; */
