1. Концепция встраивания функции заключается в том, что иногда можно избежать
классического вызова функции , что сопряжено с довольно большими расходами
памяти. При использовании встраивоемой функции компиялтор при наличии такой
возможности просто скопирует тело функции в место ее вызова , тем самым
оптимизирует выполнение кода.
2. Если в функции присутствуют как аргументы со значением по умолчнию, так
и аргументы без значений по умолчанию, то аргументы со значениями по умолчанию
должны находиться правее аргументов без значения по умолчанию. Также при вызове
функции, содержащей несколько параметров по умолчанию нельзя перерыгнуть
параметр по умолчанию не переопределив его при этом переопределив соседние
параменты (т.е нельзя сделать так: f(1,2,,3));
3. Выбор перегруженной функции производися на основании типов и количества
аргументов, переданных в функцию (Важно! Тип возвращаемого значения при выборе
функции значения не имеет)
4. Состояние в функциях и лямбда выражениях можно обеспечить с помощью
модификатора static. Однако если мы хотим использовать этот модификатор в lambda
выражениях, то нам понадобится указатель, который будет ссылаться на нашу
lambda функцию
5.Макросы считаются опасынм инструментом потому что они представляют собой
бездумную текстовую подстановку в код еще до его компиляции (а значит у
компилятора нет возможности как-то котролировать их применение).
Поэтому использование макросов может привдить к неожиданным, трудноуловимым ошибкам
